const express = require('express'); const router = express.Router(); const db = require('../db'); const bcrypt = require('bcryptjs'); const jwt = require('jsonwebtoken'); const JWT_SECRET = process.env.JWT_SECRET || 'dev_secret';
router.post('/login', (req, res) => { const { email, password } = req.body; const user = db.prepare('SELECT * FROM users WHERE email = ?').get(email); if(!user) return res.status(401).json({ error: 'Invalid credentials' }); const ok = bcrypt.compareSync(password, user.password); if(!ok) return res.status(401).json({ error: 'Invalid credentials' }); const token = jwt.sign({ id: user.id, role: user.role, email: user.email }, JWT_SECRET, { expiresIn: '8h' }); res.json({ token, user: { id: user.id, name: user.name, email: user.email, role: user.role } }); });
router.post('/register', (req, res) => { const { name, email, password } = req.body; const hash = bcrypt.hashSync(password, 8); try { const info = db.prepare('INSERT INTO users (name,email,password,role) VALUES (?,?,?,?)').run(name,email,hash,'user'); const u = db.prepare('SELECT id,name,email,role FROM users WHERE id=?').get(info.lastInsertRowid); res.json(u); } catch(e){ res.status(400).json({ error: 'Email exists' }); } });
module.exports = router;
